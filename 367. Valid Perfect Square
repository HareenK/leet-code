367. Valid Perfect Square
Ea

Given a positive integer num, write a function which returns True if num is a perfect square else False.

Note: Do not use any built-in library function such as sqrt.

Example 1:

Input: 16
Output: true

Example 2:

Input: 14
Output: false

class Solution {
public:
    bool isPerfectSquare(int num) {
        // Primality test .. get approx square. Prevent division. 
        // Take prime numbers and check if we can get numbers based on the binary search. 
        // Take prime number decompostion and check they are even.
        // Binary search idea -- damn missed it. 
        
        if (num < 2) return true;
        
        int left = 2; int right = num/2;
        
        while (left <= right) {
            int mid = left + (right - left)/2;
            long result = (long(mid))*((long)mid);
            if (result == num) {
                return true;
            } else if (result > num) {
                right = mid-1;
            } else {
                left = mid+1;
            }
        }
        return false;
        
    }
};
