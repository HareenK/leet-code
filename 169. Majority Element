169. Majority Element
Easy

Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3

Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2


class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
        sort(nums.begin(), nums.end());
        
        int size = nums.size();
        
        if (size == 0) return 0;
        
        if (nums[0] == nums[size/2]) {
            return nums[0];
        } else if (nums[size/2] == nums[size-1]) {
            return nums[size-1];
        } else {
            return nums[size/2];
        }
    }
};
