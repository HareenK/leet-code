1003. Check If Word Is Valid After Substitutions

Given a string s, determine if it is valid.

A string s is valid if, starting with an empty string t = "", you can transform t into s after performing the following operation any number of times:

    Insert string "abc" into any position in t. More formally, t becomes tleft + "abc" + tright, where t == tleft + tright. Note that tleft and tright may be empty.

Return true if s is a valid string, otherwise, return false.

 

Example 1:

Input: s = "aabcbc"
Output: true
Explanation:
"" -> "abc" -> "aabcbc"
Thus, "aabcbc" is valid.

Example 2:

Input: s = "abcabcababcc"
Output: true
Explanation:
"" -> "abc" -> "abcabc" -> "abcabcabc" -> "abcabcababcc"
Thus, "abcabcababcc" is valid.

Example 3:

Input: s = "abccba"
Output: false
Explanation: It is impossible to get "abccba" using the operation.

Example 4:

Input: s = "cababc"
Output: false
Explanation: It is impossible to get "cababc" using the operation.

class Solution {
public:
    bool isValid(string input) {
        // use a stack and when you find a "abc" pop the stack. 
            
        // If we find a 'c' .. remove the valid entries. 
        stack<char> s; 
        for (auto & c : input) {
            if (c == 'c') {
                if (s.size() < 2)
                    return false;
                int top = s.top();
                s.pop();
                int secondTop = s.top();
                if (top == 'b' && secondTop == 'a') {
                    s.pop();
                } else {
                    s.push(top);
                    s.push(c);
                }
            } else {
                s.push(c);
            }
        }
        
        return s.size() == 0 ? true : false;
    }
};
