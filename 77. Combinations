https://leetcode.com/problems/combinations/

77. Combinations
Medium

Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

Example:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

class Solution {
public:
    vector<vector<int>> results;
    int nG;
    vector<int> numsG;
    
    void dfs (vector<int> & path, int start, int count) {
        if (count == 0) {
            results.push_back(path);
            return;
        }
        
        if (start == nG) {
            return;
        } 
        
        for (int i = start; i < nG; i++) {
            path.emplace_back(numsG[i]);
            dfs (path, i+1, count-1);
            path.pop_back();
        }
        return;
    }
    
    vector<vector<int>> combine(int n, int k) {
        // simple dfs with back tracking. 
        
        numsG = vector<int>(n, 0);
        
        for (int i = 0; i < n; i++) {
            numsG[i] = i+1;
        }
        
        nG = n;
        
        vector<int> path;
        
        dfs (path, 0, k);
     
        return results;
    }
};
