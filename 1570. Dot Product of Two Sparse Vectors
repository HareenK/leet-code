1570. Dot Product of Two Sparse Vectors

Given two sparse vectors, compute their dot product.

Implement class SparseVector:

    SparseVector(nums) Initializes the object with the vector nums
    dotProduct(vec) Compute the dot product between the instance of SparseVector and vec

A sparse vector is a vector that has mostly zero values, you should store the sparse vector efficiently and compute the dot product between two SparseVector.

Follow up: What if only one of the vectors is sparse?

class SparseVector {
public:
    vector<int> num;
    
    SparseVector(vector<int> &nums) {
        num = nums;
    }
    
    // Return the dotProduct of two sparse vectors
    int dotProduct(SparseVector& vec) {
        int one = 0;
        
        if (vec.num.size() != num.size())
            return 0;
        
        int result = 0;
        
        while (one < num.size()) {
            if (num[one] != 0 && vec.num[one] != 0) {
                result += (num[one] * vec.num[one]);
            }
            one++;
        }
        return result;
    }
};

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1(nums1);
// SparseVector v2(nums2);
// int ans = v1.dotProduct(v2);
