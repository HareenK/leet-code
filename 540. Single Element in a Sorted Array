540. Single Element in a Sorted Array
Medium

You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.

 

Example 1:

Input: [1,1,2,3,3,4,4,8,8]
Output: 2

Example 2:

Input: [3,3,7,7,10,11,11]
Output: 10

 

Note: Your solution should run in O(log n) time and O(1) space.
Accepted
113,258
Submissions
194,369

/*
class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        
        // Sorted - can make a search in log(n)
        // How to derive the left right logic. 
        // If each elem is repeated twice - indexes 
        // will be 0,1, 2,3, (4) 5,6
        // odd number of indexes always. 
        // i:   0 1 2 3 4 5 6 7 8   
        //     [1,2,2,3,3,4,4,8,8]
        // s:   ^
        // e:   ^         
        // m    ^        
        
        int size = nums.size();
        
        int start = 0;
        int end = size-1;
        
        while(start <= end) {
            int mid = start + (end - start)/2;
            if (mid == 0 || mid == size) {
                return nums[mid];
            }
            if (nums[mid-1] != nums[mid] && nums[mid+1] != nums[mid]) {
                return nums[mid];
            }
            if (mid%2 == 0) {
               if (nums[mid-1] == nums[mid]) { 
                // mid is even and mid is same as mid-1 .. move left, else right.
                    end = mid-1;
                } else {
                    start = mid+1;
                }
            } else {
                // mid is odd and mid is same as mid+1 .. move left, else right.
                if (nums[mid] == nums[mid+1]) {
                    end = mid-1;
                } else {
                    start = mid+1;
                }
            }
        }
        return -1;
    }
};
*/

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int result{0};
        
        for (int num : nums)
            result ^= num;
        
        return result;        
    }
};
