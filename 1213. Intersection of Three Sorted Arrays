1213. Intersection of Three Sorted Arrays
Easy

Given three integer arrays arr1, arr2 and arr3 sorted in strictly increasing order, return a sorted array of only the integers that appeared in all three arrays.

 

Example 1:

Input: arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]
Output: [1,5]
Explanation: Only 1 and 5 appeared in the three arrays.

 

Constraints:

    1 <= arr1.length, arr2.length, arr3.length <= 1000
    1 <= arr1[i], arr2[i], arr3[i] <= 2000

// class Solution {
// public:
//     vector<int> arraysIntersection(vector<int>& arr1, vector<int>& arr2, vector<int>& arr3) {
//         // Keep three pointers. 
        
//         // Keep a max of all the three current pointers. 
        
//         int size = arr1.size();

//         vector<int> index (3,0);
//         vector<int> curr (3,0);
        
//         vector<int> result = {};

//         while (index[0] < size || index[1] < size || index[2] < size) {
//             curr[0] = index[0] < size ? arr1[index[0]] : INT_MIN;
//             curr[1] = index[1] < size ? arr2[index[1]] : INT_MIN;
//             curr[2] = index[2] < size ? arr3[index[2]] : INT_MIN;
            
//             int maxL = *max_element (curr.begin(), curr.end());
            
//             int count = 0;
            
//             for (int i = 0; i < 3; i++) {
//                 if (curr[i] < maxL) {
//                     index[i]++;
//                 } else if (curr[i] == maxL) {
//                     count++;
//                 }
//             }
            
//             if (count == 3) {
//                 result.emplace_back(maxL);
//                 index[0]++; index[1]++; index[2]++;
//             }
//         }
        
//         return result;
//     }
// };


class Solution {
public:
    vector<int> arraysIntersection(vector<int>& arr1, vector<int>& arr2, vector<int>& arr3) 
    {
        vector<int> res;
        for(int i1 = 0, i2 = 0, i3 = 0; i1 < arr1.size() && i2 < arr2.size() && i3 < arr3.size();)
        {
            if(arr1[i1] == arr2[i2] && arr1[i1] == arr3[i3])
                res.push_back(arr1[i1]);
            int m = min({arr1[i1], arr2[i2], arr3[i3]});
            if(arr1[i1]==m) ++i1;
            if(arr2[i2]==m) ++i2;
            if(arr3[i3]==m) ++i3;
        }
        return res;
    }
};
