303. Range Sum Query - Immutable

Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:

Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3

class NumArray {
public:
    vector<int> prefixSum;
    NumArray(vector<int>& nums) {
        int size = nums.size();
        prefixSum = vector<int> (size+1, 0);
        int sum = 0;
        
        for (int i = 1; i <= size; i++) {
            sum = sum + nums[i-1];
            prefixSum[i] = sum;
        }
    }
    
    int sumRange(int i, int j) {
        return prefixSum[j+1] - prefixSum[i];
    }
};

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray* obj = new NumArray(nums);
 * int param_1 = obj->sumRange(i,j);
 */
