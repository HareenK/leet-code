84. Largest Rectangle in Histogram
Hard

Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.

Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].

The largest rectangle is shown in the shaded area, which has area = 10 unit.

Example:

Input: [2,1,5,6,2,3]
Output: 10

class Solution {
public:
    
    
    // Very finky code .. but the logic is super-neat. 
    // Use a stack to keep the increasing sequence of numbers, 
    // and then work on the stack until we find a number lower
    // the current index. 
    
    int largestRectangleArea(vector<int>& heights) {
        // Stack based approach.
        
        int size = heights.size();
        
        if (!size)
            return 0;
        
        stack <int> s; // index -
        
        s.push (0);
        
        int max_area = 0;
        int i = 0;
        for (i = 1; i < heights.size(); i++) {
            while (heights[s.top()] >= heights[i]) {
                int top_height = heights[s.top()];
                s.pop();
                
                if (s.empty()) {
                    max_area = max (max_area, top_height*i);
                    break;
                }
                
                max_area = max (max_area, top_height*(i-s.top()-1));
            }
            s.push (i);
        }
        
        // If the stack is not empty .. keep computing the max area .. 
        
        while (!s.empty()) {
            int top_height = heights[s.top()];
            s.pop();
            
            if (s.empty()) {
                max_area = max (max_area, top_height*i);
                break;
            }
            
            max_area = max (max_area, top_height*(i-s.top()-1));
        }
        
        return max_area;
    }
};
