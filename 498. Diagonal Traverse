498. Diagonal Traverse

Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image.

Example:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]

Output:  [1,2,4,7,5,3,6,8,9]

Explanation:

Note:

The total number of elements of the given matrix will not exceed 10,000.
Accepted
84,266
Submissions
175,391

class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& matrix) {
        // Walk the array by slotting them into the row in which they
        // belong in the final output. 
        
        int rows = matrix.size();
        if (!rows)
            return {};
        
        int cols = matrix[0].size();
        
        vector<vector<int>> results (rows + cols-1, vector<int>(0,0));
        
        for (int r = 0; r < rows; r++) {
            for (int c = 0; c < cols; c++) {
                results[r+c].emplace_back(matrix[r][c]);
            }
        }
        
        bool toggle = true;
        
        vector<int> result;
        
        for (auto & elem : results) {
            if (toggle) {
                for (int i = elem.size()-1; i >= 0; i--) {
                    result.emplace_back(elem[i]);
                } 
            } else {
                for (int i = 0; i < elem.size(); i++) {
                    result.emplace_back(elem[i]);
                }
            }
            
            toggle ^= true;
        }
        
        return result; 
    }
};
