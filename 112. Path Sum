/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // Will the tree have negative numbers? 
    // If so 
    int target;
    
    bool dfs (TreeNode * root, int sum) {
        if (root->left == NULL && root->right == NULL) {
            if (sum + root->val == target)
                return true;
        }
        
        if (root->left != NULL && dfs(root->left, sum+root->val))
            return true;
        
        if (root->right != NULL && dfs (root->right, sum+root->val))
            return true;
            
        return false;
        
    }
    
    bool hasPathSum(TreeNode* root, int sum) {
        if (root == NULL)
            return false;
        
        target = sum;
        
        return dfs (root, 0);
    }
};
